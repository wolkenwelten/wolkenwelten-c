(def help-iter (位 (l) "Iter for (help)"
	(cond ((nil? l) #t)
	      (#t (display (describe (car l))) (newline) (help-iter (cdr l))))))

(def help (位 (i) "Describes 10 functions at offset 1"
	(let ((off (* (int i) 10)))
	(help-iter (map cat (symbol-table off 10)))
	(display (cat "Help page " (int i) " of " (/ (symbol-count) 10))) (newline) #t)))

(def repl-prompt #nil)
(let ((repl-count -1))
	(set! repl-prompt (位 (i) "Displays the REPL prompt"
		(set! repl-count (++ repl-count))
		(display (cat "[" repl-count "]" (ansi-fg 1) "位" (ansi-fg 12) ">" (ansi-reset) " ")))))
