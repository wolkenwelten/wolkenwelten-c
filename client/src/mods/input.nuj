[def input/primary-did #f]
[def input/primary-did-count 0]

[def input/secondary-did #f]
[def input/secondary-did-count 0]

[def input/tertiary-did #f]
[def input/tertiary-did-count 0]

[def did-throw #f]
[def throw-start 0]

[defun player-blockbreak! []
       [when [zero? input/primary-did-count]
             [def p [player-raycast #f]]
             [when p [message/send 0 [list :blockbreaker p]]
                     [player-do-primary! count]]]]

[defun player-primary! []
       "Make the player do a primary action"
       [if [cons-mode?]
           [player-blockbreak! input/primary-did-count]
           [if blockchooser/active
               [player-do-primary! input/primary-did-count]
               [pear/shoot!]]]
       [set! input/primary-did #t]]

[defun player-secondary! []
  "Make the player do a secondary action"
  [if blockchooser/active
      [blockchooser/place!]
      [pear/shoot! #t]]
  [set! input/secondary-did #t]]

[defun player-tertiary! []
       "Make the player do a tertiary action"
       [when [zero? input/tertiary-did-count]
             [set! blockchooser/active [not blockchooser/active]]
             [blockchooser/refresh]]
       #;[item-tertiary! 0 input/tertiary-did-count]
       [set! input/tertiary-did #t]]

[defun input-tick []
       "Evals all Input handlers in order"
       [input-mouse-tick]
       [input-keyboard-tick]
       [hook/tick]

       [++ input/primary-did-count]
       [when-not input/primary-did
                 [player-stop-mining!]
                 [set! input/primary-did-count 0]]
       [set! input/primary-did #f]

       [++ input/secondary-did-count]
       [when-not input/secondary-did
                 [set! input/secondary-did-count 0]]
       [set! input/secondary-did #f]

       [++ input/tertiary-did-count]
       [when-not input/tertiary-did
                 [set! input/tertiary-did-count 0]]
       [set! input/tertiary-did #f]]
