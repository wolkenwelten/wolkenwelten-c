[def quests #nil]
[def quest/panels #nil]

[def quest/panel/position! [λ []
     [def y 64]
     [for-each [λ [cur-panel]
                  [widget/y! cur-panel y]
                  [set! y [+ y [widget/height cur-panel] 8]]
               ]
               quest/panels]
]]

[def quest/panel/remove! [λ [panel]
     [set! quest/panels
           [filter [λ [cur-panel]
                      [!= cur-panel panel]]
                   quest/panels]]
]]

[def quest/panel/new! [λ [headline bodytext wid]
     [def panel   [widget/new w-panel]]
     [def content [widget/new w-panel]]
     [def head    [widget/new w-label]]
     [def text    [widget/new w-label]]

     [def wid-height 0]
     [when wid [set! wid-height [widget/height wid]]]

     [widget/parent! panel w-game-screen]
     [widget/x!      panel  -8]
     [widget/y!      panel   8]
     [widget/width!  panel 320]
     [widget/height! panel [+ 120 wid-height]]

     [widget/parent! content panel]
     [widget/width!  content -8]
     [widget/height! content -8]
     [widget/x!      content  8]
     [widget/y!      content  8]

     [widget/parent! head content]
     [widget/width!  head  -1]
     [widget/height! head  64]
     [widget/label!  head headline]

     [widget/parent! text content]
     [widget/y!      text  48]
     [widget/width!  text  -1]
     [widget/height! text [- -48 wid-height]]
     [widget/flags!  text wf-small]
     [widget/label!  text bodytext]

     [when wid
           [widget/parent! wid content]
           [widget/y! 120]
           [widget/x! 8]
           [widget/width! -1]
     ]

     [set! quest/panels [cons panel quest/panels]]
     [quest/panel/position!]
     panel
]]

[def quest/default [ω
        [def active #f]
        [def finished #f]
        [def name "Default Quest"]
        [def body "Placeholder for some descriptive text"]
        [def refresh! [λ [] #f]]
        [def active? [λ [] #f]]
        [def active! [δ []
                       [say [cat [ansi-yellow "New Quest: "] name]]
        ]]
        [def finish? [λ [] #f]]
        [def finish! [δ []
                       [say [cat [ansi-green "Quest finished: "] name]]
        ]]
        [def check-finished! [δ []
                [when [finish?]
                      [finish!]
                      [set! finished #t]]
        ]]
        [def check-active! [δ []
                [when [active?]
                      [active!]
                      [set! active #t]]
        ]]
]]

[def quest/new [λ [@...args]
        "Create a new quest object"
        [def ret [quest/default [ω]]]
        [apply ret '[[def active #f] [def finished #f]]]
        [apply ret @...args]
        [set! quests [cons ret quests]]
        ret
]]

[def quest-test-time [quest/new
        [def name [cat "Staying alive for " [ansi-red "300"] " Seconds"]]
        [def body ["As your first task you have to stay alive for just " [ansi-red "300"] " seconds, hopefully you can achieve this goals and continue onwards on your adventures. Best of luck there, adventurer!"]]
        [def panel]
        [def quest-start 0]
        [def progress-widget]
        [def refresh! [λ []
                        [widget/label! progress-widget
                                       [string [/ [[quest-start + 300000] - [time/milliseconds]] 1000]]]
                        [def progress [[[time/milliseconds] - quest-start] / 300000.0]]
                        [widget/val/int! progress-widget
                                         [int [progress * 4096.0]]]
        ]]
        [def finished #f]
        [def finish? [λ []
                       [[widget/val/int progress-widget] >= 4080]
        ]]
        [def finish! [λ []
                [[[self 1] finish!]]
                [widget/parent! panel #nil]
                [quest/panel/remove! panel]
                [set! panel #nil]
                [quest/panel/position!]
        ]]
        [def active? [λ [] #t]]
        [def active! [λ []
                [[[self 1] active!]]
                [set! quest-start [time/milliseconds]]

                [set! progress-widget [widget/new w-slider]]
                [widget/height! progress-widget 32]
                [widget/width! progress-widget -1]
                [widget/y! progress-widget -8]
                ;[widget/label! progress-widget ""]
                [set! panel [quest/panel/new! name body progress-widget]]
        ]]
]]

[def quest-test-fetch [quest/new
        [def name [cat "Get 10 logs"]]
        [def body ["To complete this quest you need to collect " [ansi-red "10"] " wooden logs"]]
        [def panel]
        [def progress-widget]
        [def finish! [λ []
                        [[[self 1] finish!]]
                        [widget/parent! panel #nil]
                        [quest/panel/remove! panel]
                        [quest/panel/position!]
                        [set! panel #nil]
        ]]
        [def refresh! [λ []
                        [widget/val/item! progress-widget [cons i-oak-log [player-ingredient-get i-oak-log]]]
        ]]
        [def finish? [λ []
                        [[player-ingredient-get i-oak-log] > 10]
        ]]
        [def active? [λ [] #t]]
        [def active! [λ []
                       [[[self 1] active!]]

                       [set! progress-widget [widget/new w-item]]
                       [widget/height! progress-widget 64]
                       [widget/width! progress-widget 64]
                       [widget/y! progress-widget -8]
                       [widget/x! progress-widget 124]
                       [refresh!]
                       [set! panel [quest/panel/new! name body progress-widget]]
        ]]
]]

[def quest/refresh [λ []
        [def l quests]
        [def cur #nil]
        [while l
               [try repl/exception-handler
                    [set! cur [car l]]
                    [if [cur active]
                        [unless [cur finished] [cur [check-finished!]] [[cur refresh!]] ]
                        [cur [check-active!]]]
               ]
               [set! l [cdr l]]
        ]
]]

[event-bind "on-join" [λ []
        [quest/refresh]
]]

[event-bind "on-gameplay-tick" [λ []
        [quest/refresh]
]]

[event-bind "on-leave" [λ []
            [println "Test"]
            [for-each [λ [panel] [widget/parent! panel #nil]] quest/panels]
            [set! quests #nil]
            [set! quest/panels #nil]
]]
