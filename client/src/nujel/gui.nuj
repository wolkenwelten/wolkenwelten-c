[def w-none 0]
[def w-space 1]
[def w-panel 2]
[def w-background 3]
[def w-horizontal-line 4]
[def w-label 5]
[def w-text-input 6]
[def w-button 7]
[def w-radio-button 8]
[def w-button-del 9]
[def w-slider 10]
[def w-item-slot 11]
[def w-recipe-slot 12]
[def w-recipe-info 13]
[def w-game-screen 14]
[def w-text-scroller 15]
[def w-text-log 16]

[def wf-hidden      #b0000_0000_0000_0001]
[def wf-hover       #b0000_0000_0000_0010]
[def wf-clicked     #b0000_0000_0000_0100]
[def wf-no-select   #b0000_0000_0000_1000]
[def wf-animate-x   #b0000_0000_0001_0000]
[def wf-animate-y   #b0000_0000_0010_0000]
[def wf-animate-w   #b0000_0000_0100_0000]
[def wf-animate-h   #b0000_0000_1000_0000]
[def wf-small       #b0000_0001_0000_0000]
[def wf-big         #b0000_0010_0000_0000]
[def wf-bigger      #b0000_0011_0000_0000]
[def wf-alt-clicked #b0000_0100_0000_0000]
[def wf-mid-clicked #b0000_1000_0000_0000]
[def wf-active      #b0001_0000_0000_0000]
[def wf-lisp        #b0010_0000_0000_0000]


[def widget/center-x! [λ [w]
	[widget/x! w [- [/ [window-width] 2] [/ [widget/width w] 2]]]
]]
[def widget/center-y! [λ [w]
	[widget/y! w [- [/ [window-height] 2] [/ [widget/height w] 2]]]
]]
[def widget/center! [λ [w]
	[widget/center-x! w]
	[widget/center-y! w]
]]

[def popup [λ [headline bodytext]
	[def panel   [widget/new w-panel]]
	[def content [widget/new w-panel]]
	[def head    [widget/new w-label]]
	[def text    [widget/new w-label]]
	[def button  [widget/new w-button]]
	[widget/width!  panel 400]
	[widget/height! panel 400]

	[widget/parent! content panel]
	[widget/width!  content -16]
	[widget/height! content -16]
	[widget/x!      content   8]
	[widget/y!      content   8]

	[widget/parent! head content]
	[widget/width!  head  -1]
	[widget/height! head  48]
	[widget/label!  head headline]
	[widget/flags!  head wf-big]

	[widget/parent! text content]
	[widget/y!      text  56]
	[widget/width!  text  -1]
	[widget/height! text -88]
	[widget/label!  text bodytext]

	[widget/parent! button content]
	[widget/width!  button 64]
	[widget/height! button 32]
	[widget/x!      button [- [/ 384 2] [/ 56 2]]]
	[widget/y!      button -1]
	[widget/label!  button "OK"]

	[widget/bind button "click" [λ [w event-name]
		[say ["Event handler fired for " [ansi-red event-name] " on " [str/write w]]]
		[widget/parent! panel #nil]
		[widget/focus! w-game-screen]
	]]

	[widget/center! panel]
	[widget/focus! button]
        panel
]]

[def pop [λ []
	[say [ansi-rainbow "Creating popup"]]
	[popup "Test popup" [cat "This is just a short " [ansi-rainbow "test message,"] " not really indented for something useful. just long enough in order to trigger an automated line break and see if anything breaks because of the amount of characters contained in this text paragraph. Paketeinbandueberschriftsmarkierung."]]
]]

[def widget/test-gc [λ []
     [test-run]
     [def start-count [widget/active-count]]
     [def mid-count 0]
     [let* [def panel [pop]]
           [set! mid-count [widget/active-count]]
           [widget/parent! panel #nil]
           [widget/focus! w-game-screen]
     ]
     [test-run]
     [def end-count [widget/active-count]]
     [def msg ["Start: " start-count " Mid: " mid-count " End: " end-count]]
     [say [if [<= end-count start-count]
              [ansi-rainbow msg]
              [ansi-red msg]]]
]]
