[defun fluid->int [type level]
       [logior type [ash [logand level #x1F] 3]]
]

[defun int->fluid [v]
       @[:type [logand v #x7] :level [ash v -3]]
]

[defun fluid/box! [fluid-level ax ay az bx by bz]
       [def x ax]
       [while [< x bx]
       [def y ay]
       [while [< y by]
       [def z az]
       [while [< z bz]
              [fluid! [vec x y z] fluid-level]
              [set! z [+ 1 z]]
       ]
              [set! y [+ 1 y]]
       ]
              [set! x [+ 1 x]]
       ]
]
