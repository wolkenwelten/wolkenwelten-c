[def repl/display/error [let*
        [defun wrap [i text]
                  [case i
                        [0 [ansi-red text]]
                        [1 text]
                        [2 [ansi-yellow text]]
                        [otherwise text]]]

        [defun iter [error i]
                [if error
                    [cons [wrap i [string [car error]]]
                          [iter [cdr error] [+ 1 i]]]
                    [cons "" #nil]]]

        [λ [error]
                "Display ERROR in a nice, human readable way"
                [join [iter error 0] "\n"]]
]]

[def repl/exception-handler [λ [error]
        [repl/display/error error]]]

[defun repl/console [line]
        [try repl/exception-handler
             [def form [cons do [read line]]]
             [def compiled-form [list do [compile form root-closure]]]
             [apply root-closure compiled-form]]]
