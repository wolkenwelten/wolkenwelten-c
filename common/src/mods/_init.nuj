; Contains definitions needed in the other .nuj files

[def action/timeout 0]

[def on-init          @[]]
[def on-spawn         @[]]
[def on-join          @[]]
[def on-leave         @[]]
[def on-gameplay-tick @[]]

[def cat-none   0]
[def cat-dirt   1]
[def cat-stone  2]
[def cat-wood   3]
[def cat-leaves 4]

[def throw-spin     1]
[def throw-heavy    2]
[def throw-pierce   4]
[def throw-collect  8]
[def throw-burning 16]

[def anim-hit       0]
[def anim-fire      1]
[def anim-reload    2]
[def anim-empty     3]
[def anim-eat       4]
[def anim-switch    5]

[defun on-init-fire  [] [event-fire on-init]]
[defun on-spawn-fire [] [event-fire on-spawn]]
[defun on-join-fire  [] [event-fire on-join]]
[defun on-leave-fire [] [event-fire on-leave]]

[event-bind on-init
            :test-run
            [Î» []
	      [log [ansi-blue "Let's test the Nujel Runtime"]]
	      [test-run]]]

[defun vx+ [v a]
  "Return the sum of vector v and [vec a 0 0]"
  [+ v [vec a 0 0]]]

[defun vy+ [v a]
  "Return the sum of vector v and [vec 0 a 0]"
  [+ v [vec 0 a 0]]]

[defun vz+ [v a]
  "Return the sum of vector v and [vec 0 0 a]"
  [+ v [vec 0 0 a]]]

[defun event-fire-safe [event values]
  [try display/error
       [for-in [h [tree/values event]]
               [apply h values]]]]

[defmacro action-every [ms . form]
          `[when [or server? [> [time/milliseconds] action/timeout]]
             [set! action/timeout [+ ~ms [time/milliseconds]]]
             ~@form]]
