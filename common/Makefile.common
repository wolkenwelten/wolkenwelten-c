ARCH             := $(shell uname -m)
NUJ_STDLIB       := $(shell find common/src/nujel/stdlib/ -type f -name '*.nuj' | sort)
NUJ_WWLIB        := $(shell find common/src/nuj/ -type f -name '*.nuj' | sort)
NUJ_SAOLIB       := $(shell find common/nujel/lib/ -type f -name '*.nuj' | sort)
COMMON_ASSETS    := common/src/tmp/stdlib.nuj common/src/tmp/wwlib.nuj
COMMON_HDRS      := $(shell find common/src -type f -name '*.h')
COMMON_SRCS      := $(shell find common/src -type f -name '*.c')
COMMON_OBJS      := ${COMMON_SRCS:.c=.o}
NUJEL_SRCS       := $(shell find common/nujel/ -type f -name '*.c') $(shell find common/src/nujel/ -type f -name '*.c') common/src/tmp/assets.c common/src/misc/vec.c
NUJEL_OBJS       := $(NUJEL_SRCS:.c=.o)
COMMON_DEPS      := ${COMMON_SRCS:.c=.deps} ${NUJEL_SRCS:.c=.deps}
ASM_OBJS         :=

WEBEXCLUDE       += --exclude=releases/macos/wolkenwelten.iconset/
WEBEXCLUDE       += --exclude=releases/win/*.res

TEST_WORLD       := -worldSeed=2600 -savegame=Test

.PHONY: all
all: wolkenwelten nujel

.PHONY: release
.PHONY: .deps

ifeq ("$(wildcard common/src/asm/$(ARCH).s)","common/src/asm/$(ARCH).s")
ASM_OBJS += common/src/asm/$(ARCH).o
endif

common/src/asm/amd64.s: common/src/asm/x86_64.s
	cp $< $@

common/src/tmp/stdlib.nuj: $(NUJ_STDLIB)
	mkdir -p common/src/tmp
	cat $(NUJ_STDLIB) > $@

common/src/tmp/wwlib.nuj: $(NUJ_WWLIB)
	mkdir -p common/src/tmp
	cat $(NUJ_WWLIB) > $@

common/nujel/saolib.nuj: $(NUJ_SAOLIB)
	cat $(NUJ_SAOLIB) > $@
common/nujel/assets.c: tools/assets common/nujel/saolib.nuj
	mkdir -p common/src/tmp/
	tools/assets common/nujel/assets common/nujel/saolib.nuj
common/nujel/assets.h: common/nujel/assets.c
	@true

%.o: %.s
	$(AS) $(ASFLAGS) -c --defsym $(AS_SYM) $< -o $@

%.o: %.c
	$(CC) $(OPTIMIZATION) $(WARNINGS) $(CSTD) $(CFLAGS) $(CINCLUDES) -g -c $< -o $@

%.deps: %.c
	$(CC) -MM $< -MT "$(<:.c=.o)" $(CINCLUDES) $(CLIENT_CINCLUDES) > $@

nujel: $(NUJEL_OBJS)
	$(CC) -lm $(COPT) $(CWARN) $(CSTD) $(CFLAGS) $(NUJEL_LIBS) $(OPTIMIZATION) -g $(NUJEL_OBJS) -o $@

$(COMMON_DEPS): | common/src/tmp/cto.h common/src/tmp/assets.h common/nujel/assets.h
.deps: common/make.deps
common/make.deps: $(COMMON_DEPS) $(NUJEL_DEPS)
	cat $(COMMON_DEPS) $(NUJEL_DEPS) > common/make.deps

common/src/tmp/assets.c: tools/assets $(COMMON_ASSETS)
	mkdir -p common/src/tmp/
	tools/assets common/src/tmp/assets $(COMMON_ASSETS)
common/src/tmp/assets.h: common/src/tmp/assets.c
	@true

tools/assets: tools/assets.c
	$(CC) $(OPTIMIZATION) $(CSTD) $(CFLAGS) $< -o $@

ifneq ($(MAKECMDGOALS),clean)
-include common/make.deps
endif

.PHONY: clean
clean:
	rm -f gmon.out client/make.deps client/tools/assets client/tools/objparser callgrind.out.* vgcore.* platform/win/wolkenwelten.res
	rm -f client/sfx/*.ogg
	rm -f $(shell find client/src common/src server/src -type f -name '*.o')
	rm -f $(shell find client/src common/src server/src -type f -name '*.deps')
	rm -f wolkenwelten wolkenwelten.exe wolkenwelten-server wolkenwelten-server.exe
	rm -f server/make.deps client/make.deps common/make.deps
	rm -rf client/src/tmp server/src/tmp common/src/tmp web/releases releases

.PHONY: web
web: release
	rsync -avhe ssh web/ wolkenwelten.net:/var/www/html/
	ssh wolkenwelten.net "mkdir -p /var/www/html/releases && cd /var/www/html/releases && mkdir -p win macos linux-x86_64 linux-aarch64 linux-armv7l"
	if [ -d "releases/wasm" ]; then rsync -avhe ssh releases/wasm/ wolkenwelten.net:/var/www/html/releases/wasm/ ; fi
	if [ -d "releases/win" ]; then rsync -avhe ssh releases/win/*.7z wolkenwelten.net:/var/www/html/releases/win/ ; fi
	if [ -d "releases/macos" ]; then rsync -avhe ssh releases/macos/*.tgz wolkenwelten.net:/var/www/html/releases/macos/ ; fi
	if [ -d "releases/linux-armv7l" ]; then rsync -avhe ssh releases/linux-armv7l/*.xz wolkenwelten.net:/var/www/html/releases/linux-armv7l/ ; fi
	if [ -d "releases/linux-aarch64" ]; then rsync -avhe ssh releases/linux-aarch64/*.xz wolkenwelten.net:/var/www/html/releases/linux-aarch64/ ; fi
	if [ -d "releases/linux-x86_64" ]; then rsync -avhe ssh releases/linux-x86_64/*.xz wolkenwelten.net:/var/www/html/releases/linux-x86_64/ ; fi
	ssh wolkenwelten.net "cd /var/www/html/ && php index.php > index.html"

.PHONY: website
website:
	rsync -avhe ssh web/ wolkenwelten.net:/var/www/html/
	ssh wolkenwelten.net "cd /var/www/html/ && php index.php > index.html"

.PHONY: debug
debug: CFLAGS += -O0
debug: all

.PHONY: profile
profile: CFLAGS += -pg
profile: all

.PHONY: sanitize
sanitize: CFLAGS += -fsanitize=address
sanitize: all

.PHONY: archive
archive:
	git archive --format=tar --prefix=wolkenwelten-HEAD.tar.gz/ HEAD | gzip > wolkenwelten-HEAD.tar.gz


common/src/tmp/cto.c: tools/infogen
	mkdir -p common/src/tmp/
	tools/infogen common/src/tmp/cto
common/src/tmp/cto.h: common/src/tmp/cto.c
	@true

.PHONY: test
test: nujel
	common/nujel/nujel-test

.PHONY: runn
runn: nujel
	gdb ./nujel -ex "r"
