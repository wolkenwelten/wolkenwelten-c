[def client? #f]
[def server? #t]

[def test-context "WolkenWelten Server"]
[test-add #t [and [not client?] server?]]

[def error [λ [...args]
	"Print its arguments into the LISP console and might alert the user"
	[say [apply cat ...args]]
]]

[def log [λ [...args]
	"Print its arguments into the LISP console"
	[console-print [apply cat ...args]]
]]

[def help [let []
	[def iter [λ [l]
		[cond [[nil? l] #t]
		       [#t [say [describe [car l]]] [iter [cdr l]]
		]]
	]]

	[λ [i]
		"Describe 10 functions at offset 1"
		[let [[off [* [int i] 10]]]
		[iter [map cat [symbol-table off 10]]]
		[say ["Help page " [int i] " of " [/ [symbol-count] 10]]] #t]
	]
]]

[def print [λ [...a]
	"Print to everyone's chat"
	[say [apply cat ...a]]
]]

[def heal [δ [a]
	"Heals oneself by a points"
	[- [dmg [cond [a [- a]] [#t -20]]]]
]]

[def time/morning! [λ []
	"Sets the Time to 8:00 AM"
	[game/time "8:00"]
]]

[def time/noon! [λ []
	"Sets the Time to 12:00 PM"
	[game/time "12:00"]
]]

[def time/evening! [λ []
	"Sets the Time to 21:30 PM"
	[game/time "21:30"]
]]

[def time/night! [λ []
	"Sets the Time to Midnight"
	[game/time "24:00"]
]]

[def player-x [δ []
	"Return the current players X Position"
	[vx [player-pos]]
]]

[def player-y [δ []
	"Return the current players Y Position"
	[vy [player-pos]]
]]

[def player-z [δ []
	"Return the current players Z Position"
	[vz [player-pos]]
]]

[def item-drop-stress [let []
	[def item-drop-stress-xz [λ [pos max x z]
		[item-drop-new [+ [vec x -6 z] pos] i-crystals 1]
		[when [< z max] [item-drop-stress-xz pos max x [+ 2 z]]]
	]]
	[def item-drop-stress-x [λ [pos max x]
		[item-drop-stress-xz pos max x -max]
		[when [< x max] [item-drop-stress-x pos max [+ 2 x]]]
	]]
	[λ [pos max]
		"Stress test the itemDrop code by generating a lot of them"
		[item-drop-stress-x pos max -max]
	]
]]

[def animal-stress [let []
	[def stress-xz [λ [pos max x z]
		[animal-new [+ [vec x 6 z] pos] 1 1]
		[when [< z max] [stress-xz pos max x [+ 4 z]]]
	]]
	[def stress-x [λ [pos max x]
		[stress-xz pos max x -max]
		[when [< x max] [stress-x pos max [+ 4 x]]]
	]]
	[λ [pos max]
		"Generate a lot of animals"
		[stress-x pos max -max]
	]
]]

[def rain [λ []
	"Make it Rain!"
	[cloud-density 0.9]
]]

[def cloud-density [λ [a]
	"Set the new Goal Density to a which should be a float in the range 0.0 - 1.0."
	[- 1.0 [/ [cloud-threshold! [* [- 1.0 a] 256.0]] 256.0]]
]]

[def countdown [λ [i]
	"Counts down on the console"
	[cond [[< [int i] 0] #t]
		[#t [say  [cond [[zero? i] [[ansi-green "GO!"] [ansi-yellow "!"] [ansi-red "!"]]]
				[[< i 4] [ansi-red i]]
				[[< i 6] [ansi-yellow i]] [#t i]]]
		[yield [timeout 1000] [lambda []  [countdown [-- i]]]]
	]]
]]

; Needs to be a dynamic function because the player's ID is only in the calling context
[def debug-stuff! [λ [pid]
        "Gives the issuing player some nice stuff to get started with"
	[clear-eq! pid]
	[clear-inv! pid]

	[set-eq! 0 i-glider 1 pid]
	[set-eq! 1 i-hook 1 pid]
	[set-eq! 2 i-jetpack 1 pid]

	[set-inv! 0 i-flamethrower 1 pid]
	[set-inv! 1 i-masterblaster 1 pid]
	[set-inv! 2 i-assaultblaster 1 pid]
	[set-inv! 3 i-shotgun 1 pid]
	[set-inv! 4 i-crystalaxe 1 pid]
	[set-inv! 5 i-crystalpickaxe 1 pid]
	;[set-inv! 5 i-flamestick]
	[set-inv! 6 i-crystalspear 1 pid]
	[set-inv! 7 i-pear 42 pid]
	[set-inv! 8 i-dirt 99 pid ]
	[set-inv! 9 i-clusterbomb 99 pid]
	;[set-inv! 9 i-grenade 99]

	[set-inv! 10 i-blaster 1 pid]
	[set-inv! 11 i-waterthrower 1 pid]
	[set-inv! 12 i-flintandsteel 1 pid]

	[set-inv! 20 i-crystalbullet 999 pid]
	[set-inv! 21 i-crystalbullet 999 pid]
	[set-inv! 22 i-crystalbullet 999 pid]
	[set-inv! 23 i-flamebullet 999 pid]
	[set-inv! 24 i-flamebullet 999 pid]
	[set-inv! 25 i-flamebullet 999 pid]
        "asd"
]]
