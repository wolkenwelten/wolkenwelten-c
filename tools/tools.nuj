[def git-get-commit [λ [branch]
	"Gets the commit hash of BRANCH"
	[trim [file/read [".git/refs/heads/" branch]]]
]]

[def git-get-branch [λ []
	"Returns the currently active branch"
	[let [[cur-head [trim [file/read "./.git/HEAD"]]]]
		[cond [[== [substr cur-head 0 4] "ref:"] [join [list-tail [split cur-head "/"] 2] "/"]]
		       [#t "UNKNOWN"]
		]
	]
]]

[def git-get-head [λ []
	"Gets the current git head"
	[git-get-commit [git-get-branch]]
]]

[def infogen-version [λ []
	"Return the infogen version"
	[cat [git-get-branch] "-" [time/strftime [time] "%Y-%m-%d"] "-" [uppercase [substr [git-get-head] 0 8]]]
]]

[def infogen-builddate [λ []
	"Return the infogen builddate"
	[time/strftime [time] "%Y-%m-%d %H:%M"]
]]

[def infogen-commit [λ []
	"Return the infogen commit"
	[uppercase [git-get-head]]
]]

[def infogen-source [λ []
	"Return the source part"
	["const char *VERSION=\""   [infogen-version]   "\";\n"
	 "const char *BUILDDATE=\"" [infogen-builddate] "\";\n"
	 "const char *COMMIT=\""    [infogen-commit]    "\";\n\n"]
]]

[def infogen [λ [prefix]
	"Generate build info and writes C source/header files PREFIX"
	[file/write [cat prefix ".c"] [infogen-source]]
]]
