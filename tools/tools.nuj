(def git-get-head (λ () "Gets the current git head"
	(let ((cur-head (file-load "./.git/HEAD")))
		(let ((path-pos (index-of
	)))

(def infogen-version (λ () "Return the infogen version"
	(trim (system "tools/versionname"))))

(def infogen-builddate (λ () "Return the infogen builddate"
	(strftime (time) "%Y-%m-%d %H:%M")))

(def infogen-commit (λ () "Return the infogen commit"
	(trim (system "git rev-parse HEAD | tr '[:lower:]' '[:upper:]'"))))

(def infogen-header (λ () "Return the header part"
("#pragma once

extern const char *VERSION;
extern const char *BUILDDATE;
extern const char *COMMIT;\n")))

(def infogen-source (λ () "Return the source part"
("#include \"cto.h\"

const char *VERSION=\"" (infogen-version) "\";
const char *BUILDDATE=\"" (infogen-builddate) "\";
const char *COMMIT=\"" (infogen-commit) "\";\n")))

(def infogen (λ (prefix) "Generate build info and writes C source/header files PREFIX"
	(file-load (cat prefix ".h") (infogen-header))
	(file-load (cat prefix ".c") (infogen-source))))
